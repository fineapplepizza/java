package project;

import java.awt.EventQueue;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;

public class bookManagement {

	private JFrame frame;
	private JTextField txtSearch;

	// Tableview에서 사용될 ArrayList생성
	ArrayList<bookManagementVO> list = new ArrayList<>();
	private JTable table;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					bookManagement window = new bookManagement();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public bookManagement() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		frame = new JFrame();
		frame.setBounds(0, 0, 952, 622);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);

		JScrollPane scrollPane = new JScrollPane();
		scrollPane.setBounds(75, 263, 830, 288);
		frame.getContentPane().add(scrollPane);
		table = new JTable();
		String[] col = { "제목", "저자", "출판사", "대출여부" };
		Controller controll = new Controller();
		ArrayList<bookManagementVO> list = controll.book_selectAll();
		Object[][] data = new Object[list.size()][4];

		// list의 내용을 JTable에 저장하기 -> 실제 data에 삽입
		for (int i = 0; i < data.length; i++) {
			for (int j = 0; j < data[i].length; j++) {
				if (j == 0) {
					data[i][j] = list.get(i).getName();
				}
				if (j == 1) {
					data[i][j] = list.get(i).getAuthor();
				}
				if (j == 2) {
					data[i][j] = list.get(i).getPublisher();
				}

				if (j == 3) {
					data[i][j] = list.get(i).getBorrow_book();
				}
			}
		}

		table = new JTable(data, col);
		scrollPane.setViewportView(table);

		JButton btnDelete = new JButton("");
		// 버튼투명하게 만들기
		btnDelete.setOpaque(false);
		btnDelete.setBounds(666, 207, 55, 35);
		frame.getContentPane().add(btnDelete);

		JButton btnChange = new JButton("");
		btnChange.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				bookChange bookchange = new bookChange();
				bookchange.main(null);
				frame.dispose();
			}
		});
		// 버튼투명하게 만들기
		btnChange.setOpaque(false);
		btnChange.setBounds(733, 207, 55, 35);
		frame.getContentPane().add(btnChange);

		JButton btnAdd = new JButton("");
		btnAdd.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				// 도서추가 창 띄우기
				Server_book_add add = new Server_book_add();
				add.main(null);
				frame.dispose();
			}
		});

		btnAdd.setOpaque(false);
		btnAdd.setBounds(804, 207, 50, 35);
		frame.getContentPane().add(btnAdd);

		txtSearch = new JTextField();
		txtSearch.setFont(new Font("굴림", Font.BOLD, 18));
		// 테두리 없애기 setBorder(null)
		txtSearch.setBorder(null);
		txtSearch.setBounds(270, 144, 511, 27);
		frame.getContentPane().add(txtSearch);
		txtSearch.setColumns(10);

		JCheckBox chc = new JCheckBox("New check box");
		chc.setBounds(87, 136, 22, 17);
		frame.getContentPane().add(chc);

		JCheckBox chckbxNewCheckBox_1 = new JCheckBox("New check box");
		chckbxNewCheckBox_1.setBounds(168, 136, 22, 17);
		frame.getContentPane().add(chckbxNewCheckBox_1);

		JCheckBox chckbxNewCheckBox_2 = new JCheckBox("New check box");
		chckbxNewCheckBox_2.setBounds(87, 162, 22, 17);
		frame.getContentPane().add(chckbxNewCheckBox_2);

		JCheckBox chckbxNewCheckBox_3 = new JCheckBox("New check box");
		chckbxNewCheckBox_3.setBounds(168, 162, 22, 17);
		frame.getContentPane().add(chckbxNewCheckBox_3);

		JButton btnSearch = new JButton("");
		btnSearch.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String search = txtSearch.getText();
				if (chc.isSelected()) {
					ArrayList<bookManagementVO>list = controll.search(search);
					Object data[][] = new Object[list.size()][3];
					// list의 내용을 JTable에 저장하기 -> 실제 data에 삽입
					for (int i = 0; i < data.length; i++) {
						for (int j = 0; j < data[i].length; j++) {
//							if (search.equals(list.get(i).getName())) {
								if (j == 0) {
									data[i][j] = list.get(i).getName();
								}
								if (j == 1) {
									data[i][j] = list.get(i).getAuthor();
								}
								if (j == 2) {
									data[i][j] = list.get(i).getPublisher();
								}
								if (j == 3) {
									data[i][j] = list.get(i).getBorrow_book();
								}
//							}
						}
					}
					// 기존에 있는 테이블의 내용을 삭제하기
					table.removeAll();
					table = new JTable(data, col);
					scrollPane.setViewportView(table);

				}
				
			}
		});

		btnSearch.setFont(new Font("굴림", Font.BOLD, 18));
		// 버튼 투명하게 만들기
		btnSearch.setOpaque(false);
		btnSearch.setBounds(799, 144, 55, 35);
		frame.getContentPane().add(btnSearch);

		JLabel lblManagement = new JLabel("New label");
		lblManagement.setFont(new Font("굴림", Font.PLAIN, 19));
		lblManagement.setIcon(new ImageIcon(
				"C:\\Users\\SM2127\\Desktop\\\uD504\uB85C\uC81D\uD2B8\\\uAD00\uB9AC\uC790\uBDF0\\\uAD00\uB9AC\uC790\uBDF0\\manager.png"));
		lblManagement.setBounds(0, 0, 934, 584);
		frame.getContentPane().add(lblManagement);

	}
}
